load ../PDQL.maude

fmod TWO-QUBIT-TELEPORT is
    pr PDQL-SEMANTICS .

    var S : Scalar .

    --- defining initial states
    ops a b c d : -> Scalar .
    eq Pow(Abs(a), 2) .+ Pow(Abs(b), 2) .+ Pow(Abs(c), 2) .+ Pow(Abs(d), 2) = 1 .
    eq S .* Pow(Abs(a), 2) .+ S .* Pow(Abs(b), 2) .+ S .* Pow(Abs(c), 2) .+ S .* Pow(Abs(d), 2) = S .

    op initQState : -> Qubit .
    eq initQState = (q[0 1]: a . |0> (x) |0> + b . |0> (x) |1> + c . |1> (x) |0> + d . |1> (x) |1>)
                    (q[2]: |0>) (q[3]: |0>) (q[4]: |0>) (q[5]: |0>) .
endfm

in ../../debug.maude

red in TWO-QUBIT-TELEPORT : initQState |= 
[ 
    H(2) ; H(3) ; CX(2, 4) ; CX(3, 5); CX(0, 2) ; CX(1, 3) ; H(0) ; H(1) ;
    if P(3, |0>) with prob >= 1/2 then skip else X(5) fi ;
    if P(2, |0>) with prob >= 1/2 then skip else X(4) fi ;
    if P(1, |0>) with prob >= 1/2 then skip else Z(5) fi ;
    if P(0, |0>) with prob >= 1/2 then skip else Z(4) fi
] P(4, 5, qubitAt(initQState, 0 1)) .
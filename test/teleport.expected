==========================================
search in TELEPORT-CHECK : initQState |= [H(1) ; CX(1,2) ; CX(0,1) ; H(0) ; (P(
    0,|0>) ? ; (P(1,|0>) ? ; skip U P(1,|1>) ? ; X(2)) U P(0,|1>) ? ; (P(1,|0>)
    ? ; Z(2) U P(1,|1>) ? ; Z(2) ; X(2)))]prop =>! JS:JudgementSet such that
    JS:JudgementSet =/= emptyJS = true .
Prob = 1/2
Prob = 1/2
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |1>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |1>) q[2]: (a .* -1) . |0> + (b .* -1) . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |1>) q[2]: (a .* -1) . |0> + (b .* -1) . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |1>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |0>) q[2]: a . |0> + b . |1>

No solution.
==========================================
search in TELEPORT-CHECK : initQState |= [H(1) ; CX(1,2) ; CX(0,1) ; H(0) ; if
    P(0,|0>) -> if P(1,|0>) -> skip | P(1,|1>) -> X(2) fi | P(0,|1>) -> if P(1,
    |0>) -> Z(2) | P(1,|1>) -> Z(2) ; X(2) fi fi]prop =>! JS:JudgementSet such
    that JS:JudgementSet =/= emptyJS = true .
Prob = 1/2
Prob = 1/2
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |1>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |1>) q[2]: (a .* -1) . |0> + (b .* -1) . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |1>) q[2]: (a .* -1) . |0> + (b .* -1) . |1>
Prob = 1/2
Q = (q[0]: |1>) (q[1]: |0>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |1>) q[2]: a . |0> + b . |1>
Prob = 1/2
Q = (q[0]: |0>) (q[1]: |0>) q[2]: a . |0> + b . |1>

No solution.
Bye.
